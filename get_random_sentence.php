<?php

ini_set('display_errors', 'On');
error_reporting(E_ALL);

/**
* Generates a random sentence
*
* Compiles the nouns, verbs, articles, and adjectives generated by
* random_noun_clause() and random_verb_by_type() into a simple 
* noun-verb-object sentence with occasional adjectives.
*
* @param array & $dictionary =>An array of nouns, verbs, and adjectives
* (such as the one found in devel_generate.inc in this directory)
* @return $phrase =>Complete noun-verb-object sentence.
*/
function RandomSentenceGenerator(array & $dictionary)
{
		$verbType = type_name();
		$nounType = noun_type();
//	  $introPhrase = random_intro_phrase();
		$nounClause = random_noun_clause($nounType, $dictionary); //get noun clause
		$verbage = random_verb_by_type($verbType, $nounType, $dictionary); //get verb and adverb(maybe)
		$nounType2 = noun_type();
		$finalNounClause = random_noun_clause($nounType2, $dictionary);
//	  $endPhrase = random_end_phrase();
		$sentence = $nounClause . $verbage . $finalNounClause . ". ";
		$phrase = ucfirst($sentence);
		return $phrase;
}

function random_noun_clause($obj, $dict)
{
		$number = mt_rand(0,count($dict["nouns"][$obj]) - 1); //get object
		$noun = $dict["nouns"][$obj][$number];
		$adjective = random_adjective($dict);
		$pattern = '/^aeiou/';
		preg_match($pattern, substr($noun,0,1), $matchN);
		preg_match($pattern, substr($adjective,0,1),$matchA);
		if($obj != "names")
		{
				$add = "the ";
		}
		else
		{
				$add = NULL;
		}
		$nounClause = $add . $adjective . $noun . " ";
		return $nounClause;
}

function random_adjective(array & $dict)
{
		$adjDet = mt_rand(0,3);
		if($adjDet < 2)
		{
				$number = mt_rand(0,count($dict["adjectives"]) - 1);
				$adjective = $dict["adjectives"][$number] . " ";
		}
		else {return NULL;}
		return $adjective;
}

function random_verb_by_type($verbType, $obj, array & $dict)
{
		$newObj = $obj;
		if($newObj == "names")
		{
				$newObj = "singular"; //no "names" type in "verbs" array
		}
		$number = mt_rand(0,count($dict["verbs"][$newObj][$verbType]) - 1); //random # from "verbs" array
		$verb = $dict["verbs"][$newObj][$verbType][$number] . " "; //get that verb
		//TODO: add adverb support
		return $verb;
}

/*	function random_adverb(){}

	 	function random_intro_phrase(){}

		function random_end_phrase(){}
*/	

function type_name()
{
		$number = mt_rand(0,6);
		if($number == 0)
		{
				$type = "present";
		}
		else if($number == 1)
		{
				$type = "past";
		}
		else if($number == 2)
		{
				$type = "past_indicative";
		}
		else if($number == 3)
		{
				$type = "present_indicative";
		}
		else if($number == 4)
		{
				$type = "future_indicative";
		}
		else if($number == 5)
		{
				$type = "future";
		}
		else if($number == 6)
		{
				$type = "linking";
		}
		return $type;
}

function noun_type()
{
		$number = mt_rand(0,4);
		if($number < 2)
		{
				$type = "singular";
		}
		else if($number < 4)
		{
				$type = "plural";
		}
		else
		{
				$type = "names";
		}
		return $type;
}
				
//$intro_phrases = [
//		"Usually,", "Once upon a time,", 
//);



//$adverbs = array(
		//adverbs
	//	);
/*
$end_phrases = array(
						
		);*/
